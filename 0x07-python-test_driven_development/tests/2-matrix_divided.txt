The ``2-matrix_divided`` module
===============================

# using ``matrix_divided``
---------------------------

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

This function can handle lists of lists of the same size
containing integers and floats. The second parameter of
matrix must be an integer or float not less than or equal to
zero.
---------------------------


verifies that div is an int/float
----------------------------
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero

>>> matrix_divided([[1, 2, 3, 4], [4, 5, 6]], 0)
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size

>>> matrix_divided([[1, 2, 3, 4], [4, 5, 6]], 1)
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size

>>> matrix_divided([[1, 2, 3], [4, 5, 6]], None)
Traceback (most recent call last):
    ...
TypeError: div must be a number

>>> matrix_divided(None, 3)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided(3, 3)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

