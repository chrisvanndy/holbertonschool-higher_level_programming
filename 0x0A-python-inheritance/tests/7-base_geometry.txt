>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
>>> bg = BaseGeometry()

>>> bg.integer_validator("age", 21)

>>> bg.integer_validator("raw_score", -1)
Traceback (most recent call last):
ValueError: raw_score must be greater than 0

>>> bg.integer_validator("comprehension", 0)
Traceback (most recent call last):
ValueError: comprehension must be greater than 0

>>> bg.area()
Traceback (most recent call last):
Exception: area() is not implemented

>>> bg.integer_validator("name", "name")
Traceback (most recent call last):
TypeError: name must be an integer

>>> bg.integer_validator("name", (3,))
Traceback (most recent call last):
TypeError: name must be an integer

>>> bg.integer_validator("name", None)
Traceback (most recent call last):
TypeError: name must be an integer

>>> bg.integer_validator(None, None)
Traceback (most recent call last):
TypeError: None must be an integer

>>> bg.integer_validator("name", {5, "and"})
Traceback (most recent call last):
TypeError: name must be an integer

>>> bg.integer_validator("name")  # doctest: +IGNORE_EXCEPTION_DETAIL
Traceback (most recent call last):
    ...
TypeError:

>>> bg.integer_validator() # doctest: +IGNORE_EXCEPTION_DETAIL
Traceback (most recent call last):
    ...
TypeError:

>>> bg.integer_validator("name", False)
Traceback (most recent call last):
ValueError: name must be greater than 0

i>>> bg.integer_validator("name", [5])
Traceback (most recent call last):
TypeError: name must be an integer
>>> 
